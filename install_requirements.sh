#!/bin/bash

# Script para instalar requerimientos en PythonAnywhere
# Ejecutar con: bash install_requirements.sh

echo "üöÄ Iniciando instalaci√≥n de dependencias para PythonAnywhere..."
echo "=================================================="

# Verificar la versi√≥n de Python
echo "üìã Verificando versi√≥n de Python..."
python3.10 --version

# Actualizar pip
echo "üîÑ Actualizando pip..."
python3.10 -m pip install --user --upgrade pip

# Instalar dependencias desde requirements.txt
echo "üì¶ Instalando dependencias desde requirements.txt..."
pip3.10 install --user -r requirements.txt

# Verificar instalaciones
echo "‚úÖ Verificando instalaciones..."
echo "=================================================="

echo "Flask:"
python3.10 -c "import flask; print(f'‚úì Flask {flask.__version__}')" 2>/dev/null || echo "‚úó Flask no instalado"

echo "Flask-SQLAlchemy:"
python3.10 -c "import flask_sqlalchemy; print(f'‚úì Flask-SQLAlchemy {flask_sqlalchemy.__version__}')" 2>/dev/null || echo "‚úó Flask-SQLAlchemy no instalado"

echo "Pandas:"
python3.10 -c "import pandas; print(f'‚úì Pandas {pandas.__version__}')" 2>/dev/null || echo "‚úó Pandas no instalado"

echo "OpenPyXL:"
python3.10 -c "import openpyxl; print(f'‚úì OpenPyXL {openpyxl.__version__}')" 2>/dev/null || echo "‚úó OpenPyXL no instalado"

echo "Werkzeug:"
python3.10 -c "import werkzeug; print(f'‚úì Werkzeug {werkzeug.__version__}')" 2>/dev/null || echo "‚úó Werkzeug no instalado"

# Verificar estructura de archivos
echo ""
echo "üìÅ Verificando estructura de archivos..."
echo "=================================================="

files=("app.py" "wsgi.py" "config.py" "requirements.txt" "templates/incorporacion.html" "static/css/styles.css")

for file in "${files[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úì $file"
    else
        echo "‚úó $file (faltante)"
    fi
done

# Verificar permisos
echo ""
echo "üîê Verificando permisos..."
echo "=================================================="
ls -la app.py wsgi.py config.py 2>/dev/null || echo "Algunos archivos no encontrados"

# Crear base de datos si no existe
echo ""
echo "üóÑÔ∏è Inicializando base de datos..."
echo "=================================================="
python3.10 -c "
from app import app, db
with app.app_context():
    db.create_all()
    print('‚úÖ Base de datos inicializada correctamente')
" 2>/dev/null || echo "‚ö†Ô∏è Error al inicializar base de datos (normal si hay problemas de importaci√≥n)"

# Mostrar resumen
echo ""
echo "üìä RESUMEN DE INSTALACI√ìN"
echo "=================================================="
echo "Directorio actual: $(pwd)"
echo "Usuario: $(whoami)"
echo "Fecha: $(date)"

# Mostrar paquetes instalados
echo ""
echo "üì¶ Paquetes Python instalados (relacionados con Flask):"
pip3.10 list --user | grep -i flask
pip3.10 list --user | grep -i pandas
pip3.10 list --user | grep -i openpyxl
pip3.10 list --user | grep -i werkzeug

echo ""
echo "üéâ Instalaci√≥n completada!"
echo "=================================================="
echo "Pr√≥ximos pasos:"
echo "1. Ve al panel Web de PythonAnywhere"
echo "2. Configura el archivo WSGI con la ruta correcta"
echo "3. Recarga tu aplicaci√≥n web"
echo "4. Revisa los logs si hay errores"
echo ""
echo "Para m√°s ayuda, consulta: README_PYTHONANYWHERE.md"